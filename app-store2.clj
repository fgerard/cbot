[:version 116]
[:updated 1320867346420]
[:configuration {:SITE {:interstate-delay "3000", :stats-cache-len "10", :instances {:lenta {:param-map {:timeout "3000"}}, :rapida {:param-map {:timeout "300"}}}, :parameters {:url "http://google.com.mx"}, :states [{:key ":www", :flow {:connect [":monitor"], :x "94", :y "116"}, :conf-map {:retry-count "3", :opr "post-http-opr", :conf {:url "http://localhost:3000/apps/WEB/primaria", :params "cmd=current-pos&uuid=XXX&timeout=20000&json=false"}, :retry-delay "1000", :timeout "5000"}} {:key ":monitor", :flow {:connect [":espera" ":bad" ":printctx"], :x "245", :y "118"}, :conf-map {:opr "clojure-opr", :conf {:code "(fn [ctx]\n  (let [m (load-string (:www ctx))]\n    (str (:status m))))\n"}}} {:key ":printctx", :flow {:connect [":www"], :x "260", :y "219"}, :conf-map {:opr "print-context-opr", :conf {:filter-re ".*monit.*"}}} {:key ":espera", :conf-map {:opr "human-opr"}, :flow {:x "495", :y "128"}}]}, :WEB {:interstate-delay "6000", :stats-cache-len "10", :instances {:primaria {:param-map {:port "22", :host "localhost"}}}, :parameters {:port "22", :start-delay "4000"}, :states [{:key ":start", :conf-map {:opr "sleep-opr", :conf {:delta ":start-delay"}}, :flow {:connect [":ssh?"], :x "19", :y "13"}} {:key ":ssh?", :flow {:connect [":switch-bad" ".*Exception.*" ":switch-good"], :x "400", :y "13"}, :conf-map {:retry-count "3", :opr "socket-opr", :conf {:port ":port", :host ":host"}, :retry-delay "3000", :timeout "1000"}} {:key ":MAL", :conf-map {:opr "human-opr"}, :flow {:x "402", :y "167"}} {:key ":switch-bad", :flow {:connect [":MAL" "send" ":context"], :x "394", :y "113"}, :conf-map {:opr "switch-bad-opr", :conf {:minutes2wait "5"}}} {:key ":switch-good", :conf-map {:opr "switch-good-opr"}, :flow {:connect [":log-bien" "send" ":context"], :x "304", :y "67"}} {:key ":log-bien", :flow {:connect [":context"], :x "149", :y "66"}, :conf-map {:opr "log-opr", :conf {:level ":warn", :text "Ya quedo jalando el servicio"}}} {:key ":context", :flow {:connect [":clojure"], :x "149", :y "115"}, :conf-map {:opr "print-context-opr", :conf {:filter-re ".*"}}} {:key ":clojure", :conf-map {:conf {:code "(fn [context] \n  (Thread/sleep 30)\n  {:result (str \"La hora es:\" (java.util.Date.)) \n   :otro (str \"20,000! tiene muchos digitos\" )\n   :host \"127.0.0.1\"})"}, :opr "clojure-opr"}, :flow {:connect [":start"], :x "16", :y "70"}} {:key ":comando", :conf-map {:opr "sleep-opr", :conf {:delta "3000"}}, :flow {:x "155", :y "166", :connect [":ojo-google"]}} {:key ":ojo-google", :conf-map {:opr "get-http-opr", :retry-delay "3000", :timeout "900", :retry-count "2", :conf {:url "http://google.com"}}, :flow {:x "21", :y "165", :connect [":context" ".*<title>Google.*" ":comando"]}}]}, :ojointerne {:interstate-delay "1000", :parameters {:- "-", :host "localhost"}, :states [{:flow {:y "100", :x "100", :connect [":checa"]}, :key ":inicio", :conf-map {:opr "sleep-opr", :conf {:delta "3000"}}} {:flow {:y "111", :x "278", :connect [":mal" ".*Exception.*" ":bien"]}, :key ":checa", :conf-map {:retry-count "3", :timeout "3000", :opr "get-http-opr", :retry-delay "3000", :conf {:url "http://google.com"}}} {:flow {:y "191", :x "210", :connect [":inicio"]}, :key ":bien", :conf-map {:opr "switch-good-opr"}} {:flow {:y "181", :x "355"}, :key ":mal", :conf-map {:opr "sleep-opr", :conf {:delta "1000"}}}], :stats-cache-len "10", :instances {:uno {:param-map {:- "-"}}}}}]
