[:version 190]
[:updated 1321411039396]
[:configuration {:Pablito {:interstate-delay "100", :stats-cache-len "10", :parameters {:- "-", :espera "100"}, :instances {:PRIMARIA {:param-map {:- "-"}}, :SECUNDARIA {:param-map {:- "-"}}}, :states [{:key ":inicio", :conf-map {:opr "sleep-opr", :conf {:delta ":espera"}}, :flow {:connect [":X1"], :x "100", :y "100"}} {:key ":X1", :conf-map {:opr "sleep-opr", :conf {:delta ":espera"}}, :flow {:connect [":X2"], :x "274", :y "102"}} {:key ":X2", :flow {:connect [":X3"], :x "191", :y "174"}, :conf-map {:opr "js-opr", :conf {:code "function (ctx) {\n  return {\n              result: ctx.espera, \n              espera: \"\"+(parseInt(ctx.espera,10)+100)\n            };\n}"}}} {:key ":X3", :flow {:connect [":inicio"], :x "176", :y "249"}, :conf-map {:opr "print-context-opr", :conf {:filter-re ".*"}}}]}, :SITE {:interstate-delay "3000", :parameters {:xuuid "unknown", :url "http://google.com.mx"}, :states [{:flow {:y "116", :x "94", :connect [":js"]}, :key ":www", :conf-map {:retry-count "3", :timeout "50000", :opr "post-http-opr", :retry-delay "3000", :conf {:url "http://localhost:3000/apps/WEB/primaria", :params "cmd=current-pos\nuuid=:xuuid\ntimeout=20000\njson=false"}}} {:flow {:y "221", :x "440", :connect [":espera" ":bad" ":printctx"]}, :key ":monitor", :conf-map {:opr "clojure-opr", :conf {:code "(fn [ctx]\n  (let [m (load-string (:www ctx))]\n    {:result (str (:status m))\n     :xuuid (str (:uuid m))}))\n"}}} {:flow {:y "219", :x "260", :connect [":www"]}, :key ":printctx", :conf-map {:opr "print-context-opr", :conf {:filter-re ".*"}}} {:flow {:y "115", :x "435"}, :key ":espera", :conf-map {:opr "human-opr"}} {:flow {:y "298", :x "274", :connect [":www"]}, :key ":pagina", :conf-map {:retry-count "3", :timeout "3000", :opr "get-http-opr", :retry-delay "3000", :conf {:url "http://www.interware.com.mx"}}} {:flow {:y "64", :x "289", :connect [":espera" ":bad" ":printctx"]}, :key ":js", :conf-map {:opr "js-opr", :conf {:code "function(ctx) {\n// alert(\"hola\");\n  var www=ctx.www.indexOf(\":status :bad\");\n  if (www>=0) {\n    return \":bad\";\n  } else {\n    return \":OK\";\n  }\n}"}}}], :stats-cache-len "10", :instances {:lenta {:param-map {:timeout "3000"}}, :rapida {:param-map {:timeout "300"}}}}, :WEB {:interstate-delay "6000", :parameters {:start-delay "4000", :port "22"}, :states [{:flow {:y "13", :x "19", :connect [":ssh?"]}, :key ":start", :conf-map {:opr "sleep-opr", :conf {:delta "15000"}}} {:flow {:y "13", :x "400", :connect [":switch-bad" ".*Exception.*" ":switch-good"]}, :key ":ssh?", :conf-map {:retry-count "3", :timeout "1000", :opr "socket-opr", :retry-delay "3000", :conf {:host ":host", :port ":port"}}} {:flow {:y "167", :x "402"}, :key ":MAL", :conf-map {:opr "human-opr"}} {:flow {:y "113", :x "394", :connect [":MAL" "send" ":context"]}, :key ":switch-bad", :conf-map {:opr "switch-bad-opr", :conf {:minutes2wait "5"}}} {:flow {:y "67", :x "304", :connect [":log-bien" "send" ":context"]}, :key ":switch-good", :conf-map {:opr "switch-good-opr"}} {:flow {:y "66", :x "149", :connect [":context"]}, :key ":log-bien", :conf-map {:opr "log-opr", :conf {:text "Ya quedo jalando el servicio", :level ":warn"}}} {:flow {:y "115", :x "149", :connect [":clojure"]}, :key ":context", :conf-map {:opr "print-context-opr", :conf {:filter-re ".*"}}} {:flow {:y "70", :x "16", :connect [":start"]}, :key ":clojure", :conf-map {:opr "clojure-opr", :conf {:code "(fn [context] \n  (Thread/sleep 30)\n  {:result (str \"La hora es:\" (java.util.Date.)) \n   :otro (str \"20,000! tiene muchos digitos\" )\n   :host \"127.0.0.1\"})"}}} {:flow {:y "166", :x "155", :connect [":ojo-google"]}, :key ":comando", :conf-map {:opr "sleep-opr", :conf {:delta "3000"}}} {:flow {:y "165", :x "21", :connect [":context" ".*<title>Google.*" ":comando"]}, :key ":ojo-google", :conf-map {:retry-count "2", :timeout "900", :opr "get-http-opr", :retry-delay "3000", :conf {:url "http://google.com"}}}], :stats-cache-len "10", :instances {:primaria {:param-map {:host "localhost", :port "22"}}}}, :ojointerne {:interstate-delay "1000", :parameters {:- "-", :host "localhost"}, :states [{:flow {:y "100", :x "100", :connect [":checa"]}, :key ":inicio", :conf-map {:opr "sleep-opr", :conf {:delta "3000"}}} {:flow {:y "111", :x "278", :connect [":mal" ".*Exception.*" ":bien"]}, :key ":checa", :conf-map {:retry-count "3", :timeout "3000", :opr "get-http-opr", :retry-delay "3000", :conf {:url "http://google.com"}}} {:flow {:y "191", :x "210", :connect [":inicio"]}, :key ":bien", :conf-map {:opr "switch-good-opr"}} {:flow {:y "181", :x "355"}, :key ":mal", :conf-map {:opr "sleep-opr", :conf {:delta "1000"}}}], :stats-cache-len "10", :instances {:uno {:param-map {:- "-"}}}}}]
